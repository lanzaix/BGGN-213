---
title: "class13"
format: pdf
---

```{r}
library(DESeq2)
```

```{r}
colData <- read.csv("GSE37704_metadata.csv",row.names = 1)
colData
```

```{r}
countData <- read.csv("GSE37704_featurecounts.csv",row.names = 1)
head(countData)
```

Q. Complete the code below to remove the troublesome first column from countData
  
```{r}
countData<- countData[,-1]
head(countData)
```

```{r}
#countData <- as.matrix(countData[,-1])
#head(countData)
```

```{r}
all(rownames(colData) == colnames(countData))
```


Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).


```{r}
keep.inds <- rowSums(countData) != 0
```

```{r}
counts <- countData[keep.inds, ]
head(counts)
```

```{r}
nrow(counts)
```


```{r}
library(DESeq2)
```

```{r}
dds <- DESeqDataSetFromMatrix(countData=countData,colData=colData,design=~condition)

dds <- DESeq(dds)
res <- results(dds)
head(res)
```
Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.

```{r}
summary(res)
```

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
mycols <- rep("grey", nrow(res) )
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )

abline(v=c(-2,2), col="red")
abline(h=-log(0.05), col="red")
```

Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```

```{r}
columns(org.Hs.eg.db)
```

```{rE}
res$symbol <- mapIds(org.Hs.eg.db,
                      keys=row.names(counts),
                      keytype="ENSEMBL",
                      column="SYMBOL")
res$entrez <- mapIds(org.Hs.eg.db,
                      keys=row.names(counts),
                      keytype="ENSEMBL",
                      column="ENTREZID",
                      multiVals="first")
res$name <- mapIds(org.Hs.eg.db,
                      keys=row.names(counts),
                      keytype="ENSEMBL",
                      column="GENENAME")
head(counts)
```

```{r}
pca <- prcomp(t(counts),scale=TRUE)
summary(pca)
```

```{r}
#colData
plot(pca$x[,1],pca$x[,2],col=as.factor(colData$condition),pch=16)
```

```{r,message = FALSE,warning= FALSE}
library(pathview)
library(gage)
library(gageData)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

#head(kegg.sets.hs, 3)
```

```{r}
foldchanges <- res$log2FoldChange
names(foldchanges) <- res$entrez
head(foldchanges)
```


```{r}
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```

![hsa04110 Cell cycle](hsa04110.pathview.png)
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets <- go.sets.hs[go.subs.hs$BP]

gobpres <- gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

head(gobpres$less)
#lapply(gobpres,head)
```

```{r}
#sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
#print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
#write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```



